Проанализируем этот новый класс. Как видите, его конструктор принимает функ­
цию userTransform() и сохраняет ее в переменной экземпляра. Кроме того, он вызыва­
ет родительский конструктор и включает объектный режим работы.
Теперь перейдем к методу _transform(). В этом методе мы увеличиваем счетчик вы­
полняемых заданий, вызываем функцию userTransform() и, наконец, сообщаем о за­
вершении текущего этапа преобразования, вызывая функцию done(). Вся хитрость
в том, что мы не ждем завершения функции userTransform() перед вызовом функции
done(), – это происходит немедленно. С другой стороны, функция userTransform()
получает специальную функцию обратного вызова – метод this._onComplete(), опо­
вещающий о завершении функции userTransform().
Метод _flush() вызывается непосредственно перед завершением потока, в котором
мы откладываем генерацию события finish, отказываясь от вызова функции done()
и присваивая ее переменной this.terminateCallback. Чтобы разобраться в механизме
завершения потока, рассмотрим метод _onComplete(). Этот последний метод вызывает­
ся после завершения каждого асинхронного задания. Он проверяет счетчик выполняю­
щихся заданий и, если он равен нулю, вызывает функцию this.terminate Call back(), ко­
торая завершит поток, сгенерировав событие finish, отложенное в методе _flush().
Только что созданный класс ParallelStream упрощает создание потока Transform,
выполняющего задания параллельно, но при его использовании следует учитывать,
что порядок обработки элементов не сохраняется. Фактически асинхронные опера­
ции могут закончить обработку и вернуть данные в любой момент, независимо от
того, когда они были запущены. Очевидно, что эта особенность делает его непригод­
ным для работы с двоичными потоками, где порядок данных обычно имеет значение,
но он наверняка пригодится для многих объектных потоков.
Реализация приложения мониторинга состояния URL-адреса
А теперь применим класс ParallelStream для реализации конкретной задачи. Пред­
положим, что требуется разработать простую службу, осуществляющую мониторинг