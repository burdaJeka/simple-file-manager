В этой главе обсуждаются массивы — фундаментальный тип данных в
JavaScript и большинстве других языков программирования. Массив представ­
ляет собой упорядоченную коллекцию значений. Каждое значение называется
элементом, и каждый элемент имеет числовую позицию в массиве, известную
как индекс. Массивы JavaScript являются нетипизированными: элемент масси­
ва может относиться к любому типу, а разные элементы одного массива могут
иметь отличающиеся типы. Элементы массива могут быть даже объектами или
другими массивами, что позволяет создавать сложные структуры данных, такие
как массивы объектов и массивы массивов. Индексы в массивах JavaScript начи­
наются с нуля и представляют собой 32-битные числа: индекс первого элемента
равен 0, а наибольший возможный индекс составляет 4294967294 (232-2) для
максимального размера массива в 4294967295 элементов. Массивы JavaScript
являются динамическими: по мере надобности они увеличиваются или умень­
шаются, а при создании массива нет необходимости объявлять для него фик­
сированный размер или повторно размещать в памяти в случае изменения его
размера. Массивы JavaScript могут быть разреженными: элементы не обязаны
иметь смежные индексы, поэтому возможно наличие брешей. Каждый мас­
сив JavaScript имеет свойство len g th . Для неразреженных массивов свойство
length указывает количество элементов в массиве. Для разреженных массивов
значение le n g th больше самого высокого индекса любого элемента.
Массивы JavaScript являются специализированной формой объекта JavaScript,
и в действительности индексы массивов — не многим более чем имена свойств,
которые просто оказались целыми числами. О специализациях массивов речь
пойдет в другом месте главы. Реализации обычно оптимизируют массивы, так
что доступ к элементам массива с числовой индексаций, как правило, выполня­
ется гораздо быстрее, нежели доступ к обыкновенным свойствам объектов.
Массивы наследуют свойства от A rray .p ro to ty p e, который определяет бо­
гатый набор методов манипулирования массивами, раскрываемый в разделе 7.8.
Большинство этих методов являются обобщенными, а значит, они корректно
работают не только с подлинными массивами, но также с любым “объектом,
похожим на массив”. Мы обсудим объекты, похожие на массивы, в разделе 7.9.
Наконец, строки JavaScript ведут себя подобно массивам символов, и мы пос­
мотрим на такое поведение в разделе 7.10.